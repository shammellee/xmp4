#!/usr/bin/env bash

if [[ $# -ge 2 && $1 == ?* ]]
then
  _target_codec='libx265'

  if [[ "$1" =~ ^(h\.?)?(26[45])$ ]]
  then
    _target_codec="libx${BASH_REMATCH[2]}"

    shift
  fi

  # Next command line argument is the destination directory
  readonly DESTINATION_DIRECTORY=$1

  # Advance to next command line argument
  shift

  if [[ $# -eq 0 ]]
  then
    echo -e "\033[33mNo input files specified\033[0m"

    exit 1
  fi

  # Remaining command line arguments are input video files
  _videos=( "$@" )

  for _video in "${_videos[@]}"
  do
    _video_name="${_video##*/}"      # Extract file name from path
    _video_stem="${_video_name%.*}"  # Remove extension from file name

    if [[ ! -f "$_video_name" ]]
    then
      echo -e "\033[31mNot a file, skipping:\033[0m ${_video_name}"

      continue
    fi

    # If the destination exists and is not a directory
    if [[ -e "$DESTINATION_DIRECTORY" && ! -d "$DESTINATION_DIRECTORY" ]]
    then
      echo -e "\e[35mError:\e[0m ${DESTINATION_DIRECTORY} is not a directory"
      exit 1
    else
      mkdir -p "$DESTINATION_DIRECTORY"
    fi

    echo -e "\n\e[33mTranscoding\e[0m ${_video_name}..."

    # Convert input file(s) to mp4
    if [[ ${BASH_REMATCH[2]} == '265' ]]
    then
      ffmpeg -loglevel panic -stats -nostdin -i "$_video" -c:v libx265 -x265-params log-level=error -crf 28 -c:a aac "${DESTINATION_DIRECTORY}/${_video_stem}.mp4"
    elif [[ ${BASH_REMATCH[2]} == '264' ]]
    then
      ffmpeg -loglevel panic -stats -nostdin -i "$_video" -c:v libx264 -crf 23 -c:a aac -q:a 100 "${DESTINATION_DIRECTORY}/${_video_stem}.mp4"
    fi
  done

  echo -e '\n\033[32mTranscode Complete!\e[0m'
else
  echo -e "\e[33mUsage:\e[0m ${0##*/} [<output_codec=265|264>] <output_directory> <input_file> [...]"
  exit 1
fi

